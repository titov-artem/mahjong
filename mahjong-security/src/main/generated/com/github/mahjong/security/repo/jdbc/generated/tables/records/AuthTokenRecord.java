/*
 * This file is generated by jOOQ.
*/
package com.github.mahjong.security.repo.jdbc.generated.tables.records;


import com.github.mahjong.security.repo.jdbc.generated.tables.AuthToken;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthTokenRecord extends UpdatableRecordImpl<AuthTokenRecord> implements Record3<String, String, LocalDateTime> {

    private static final long serialVersionUID = 625705328;

    /**
     * Setter for <code>public.auth_token.login</code>.
     */
    public void setLogin(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.auth_token.login</code>.
     */
    public String getLogin() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.auth_token.token</code>.
     */
    public void setToken(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.auth_token.token</code>.
     */
    public String getToken() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.auth_token.expire_at</code>.
     */
    public void setExpireAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.auth_token.expire_at</code>.
     */
    public LocalDateTime getExpireAt() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return AuthToken.AUTH_TOKEN.LOGIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AuthToken.AUTH_TOKEN.TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return AuthToken.AUTH_TOKEN.EXPIRE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getLogin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component3() {
        return getExpireAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getLogin();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getToken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getExpireAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthTokenRecord value1(String value) {
        setLogin(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthTokenRecord value2(String value) {
        setToken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthTokenRecord value3(LocalDateTime value) {
        setExpireAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthTokenRecord values(String value1, String value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthTokenRecord
     */
    public AuthTokenRecord() {
        super(AuthToken.AUTH_TOKEN);
    }

    /**
     * Create a detached, initialised AuthTokenRecord
     */
    public AuthTokenRecord(String login, String token, LocalDateTime expireAt) {
        super(AuthToken.AUTH_TOKEN);

        set(0, login);
        set(1, token);
        set(2, expireAt);
    }
}
