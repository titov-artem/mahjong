/*
 * This file is generated by jOOQ.
*/
package com.github.mahjong.league.repo.jdbc.generated.tables;


import com.github.mahjong.league.repo.jdbc.generated.Indexes;
import com.github.mahjong.league.repo.jdbc.generated.Keys;
import com.github.mahjong.league.repo.jdbc.generated.Public;
import com.github.mahjong.league.repo.jdbc.generated.tables.records.JoinRequestRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JoinRequest extends TableImpl<JoinRequestRecord> {

    private static final long serialVersionUID = 324703054;

    /**
     * The reference instance of <code>public.join_request</code>
     */
    public static final JoinRequest JOIN_REQUEST = new JoinRequest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JoinRequestRecord> getRecordType() {
        return JoinRequestRecord.class;
    }

    /**
     * The column <code>public.join_request.id</code>.
     */
    public final TableField<JoinRequestRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('join_request_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.join_request.league_id</code>.
     */
    public final TableField<JoinRequestRecord, Long> LEAGUE_ID = createField("league_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.join_request.player_id</code>.
     */
    public final TableField<JoinRequestRecord, Long> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.join_request.created_at</code>.
     */
    public final TableField<JoinRequestRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>public.join_request.decision</code>.
     */
    public final TableField<JoinRequestRecord, String> DECISION = createField("decision", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>public.join_request.reason</code>.
     */
    public final TableField<JoinRequestRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR(512).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.join_request.reviewed_by</code>.
     */
    public final TableField<JoinRequestRecord, Long> REVIEWED_BY = createField("reviewed_by", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.join_request.reviewed_at</code>.
     */
    public final TableField<JoinRequestRecord, LocalDateTime> REVIEWED_AT = createField("reviewed_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.join_request.expire_at</code>.
     */
    public final TableField<JoinRequestRecord, LocalDateTime> EXPIRE_AT = createField("expire_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.join_request</code> table reference
     */
    public JoinRequest() {
        this(DSL.name("join_request"), null);
    }

    /**
     * Create an aliased <code>public.join_request</code> table reference
     */
    public JoinRequest(String alias) {
        this(DSL.name(alias), JOIN_REQUEST);
    }

    /**
     * Create an aliased <code>public.join_request</code> table reference
     */
    public JoinRequest(Name alias) {
        this(alias, JOIN_REQUEST);
    }

    private JoinRequest(Name alias, Table<JoinRequestRecord> aliased) {
        this(alias, aliased, null);
    }

    private JoinRequest(Name alias, Table<JoinRequestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.JOIN_REQUEST_LEAGUE_ID_PLAYER_ID_DECISION_IDX, Indexes.JOIN_REQUEST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JoinRequestRecord, Long> getIdentity() {
        return Keys.IDENTITY_JOIN_REQUEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JoinRequestRecord> getPrimaryKey() {
        return Keys.JOIN_REQUEST_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JoinRequestRecord>> getKeys() {
        return Arrays.<UniqueKey<JoinRequestRecord>>asList(Keys.JOIN_REQUEST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JoinRequest as(String alias) {
        return new JoinRequest(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JoinRequest as(Name alias) {
        return new JoinRequest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JoinRequest rename(String name) {
        return new JoinRequest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JoinRequest rename(Name name) {
        return new JoinRequest(name, null);
    }
}
