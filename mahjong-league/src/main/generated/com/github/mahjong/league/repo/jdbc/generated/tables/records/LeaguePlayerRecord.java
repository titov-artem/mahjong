/*
 * This file is generated by jOOQ.
*/
package com.github.mahjong.league.repo.jdbc.generated.tables.records;


import com.github.mahjong.league.repo.jdbc.generated.tables.LeaguePlayer;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeaguePlayerRecord extends UpdatableRecordImpl<LeaguePlayerRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = -923088287;

    /**
     * Setter for <code>public.league_player.league_id</code>.
     */
    public void setLeagueId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.league_player.league_id</code>.
     */
    public Long getLeagueId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.league_player.player_id</code>.
     */
    public void setPlayerId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.league_player.player_id</code>.
     */
    public Long getPlayerId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return LeaguePlayer.LEAGUE_PLAYER.LEAGUE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return LeaguePlayer.LEAGUE_PLAYER.PLAYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getLeagueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getLeagueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LeaguePlayerRecord value1(Long value) {
        setLeagueId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LeaguePlayerRecord value2(Long value) {
        setPlayerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LeaguePlayerRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LeaguePlayerRecord
     */
    public LeaguePlayerRecord() {
        super(LeaguePlayer.LEAGUE_PLAYER);
    }

    /**
     * Create a detached, initialised LeaguePlayerRecord
     */
    public LeaguePlayerRecord(Long leagueId, Long playerId) {
        super(LeaguePlayer.LEAGUE_PLAYER);

        set(0, leagueId);
        set(1, playerId);
    }
}
